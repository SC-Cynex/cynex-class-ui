name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present

  approve-pr:
    if: github.event_name == 'pull_request' && success()
    runs-on: ubuntu-latest
    steps:
    - name: Approve Pull Request
      run: |
        PR_NUMBER=$(echo ${{ github.event.pull_request.number }})
        REPO=$(echo ${{ github.repository }})

        # Adiciona um coment√°rio no Pull Request
        curl -X POST -H "Authorization: token ${{ secrets.ACTIONS_BOT }}" \
        -H "Content-Type: application/json" \
        -d '{"body": "O build foi bem-sucedido! O PR foi aprovado automaticamente."}' \
        "https://api.github.com/repos/${REPO}/issues/${PR_NUMBER}/comments"

        # Aprova o Pull Request
        curl -X POST -H "Authorization: token ${{ secrets.ACTIONS_BOT }}" \
        -H "Content-Type: application/json" \
        -d '{"event": "APPROVE"}' \
        "https://api.github.com/repos/${REPO}/pulls/${PR_NUMBER}/reviews"

  merge-pr:
    if: github.event_name == 'pull_request' && success()
    runs-on: ubuntu-latest
    steps:
    - name: Merge Pull Request
      run: |
        PR_NUMBER=$(echo ${{ github.event.pull_request.number }})
        REPO=$(echo ${{ github.repository }})

        # Realiza o merge automaticamente
        curl -X PUT -H "Authorization: token ${{ secrets.ACTIONS_BOT }}" \
        -H "Content-Type: application/json" \
        -d '{"commit_title": "Merge pull request #'"$PR_NUMBER"'", "merge_method": "squash"}' \
        "https://api.github.com/repos/${REPO}/pulls/${PR_NUMBER}/merge"
